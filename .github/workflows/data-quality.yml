name: Data Quality

on:
  push:
    branches: [main]
    paths:
      - 'fair3/engine/brokers/**'
      - 'fair3/engine/universe/**'
      - 'tests/unit/test_*fetcher*.py'
      - 'tests/unit/test_universe_pipeline.py'
      - '.github/workflows/data-quality.yml'
      - 'data/**'
  pull_request:
    branches: [main]
    paths:
      - 'fair3/engine/brokers/**'
      - 'fair3/engine/universe/**'
      - 'tests/unit/test_*fetcher*.py'
      - 'tests/unit/test_universe_pipeline.py'
      - '.github/workflows/data-quality.yml'
      - 'data/**'
  schedule:
    - cron: '0 4 * * 1-5'
  workflow_dispatch:

permissions:
  contents: read

env:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  FORCE_COLOR: "1"

jobs:
  contract-tests:
    name: Contratti fetcher & universe
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            pyproject.toml
            pytest.ini
      - name: Installa dipendenze
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Test mirati
        run: |
          pytest \
            tests/unit/test_trade_republic_fetcher.py \
            tests/unit/test_universe_pipeline.py \
            tests/unit/test_ingest_fetchers.py

  catalog-audit:
    name: Audit registri dati
    runs-on: ubuntu-latest
    needs: contract-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: |
            pyproject.toml
            pytest.ini
      - name: Installa dipendenze base
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      - name: Validazione registri
        run: |
          python - <<'PY'
import json
from pathlib import Path

from fair3.engine.brokers import available_brokers
from fair3.engine.ingest import available_sources
from fair3.engine.universe.providers import default_provider_preferences

brokers = available_brokers()
if not brokers:
    raise SystemExit("Nessun broker registrato")

sources = available_sources()
if not sources:
    raise SystemExit("Nessun data source disponibile")

preferences = default_provider_preferences()
if not preferences:
    raise SystemExit("Nessuna preferenza provider configurata")

report = {
    "brokers": brokers,
    "sources": sorted(sources),
    "provider_preferences": [p.model_dump() for p in preferences],
}
Path("audit").mkdir(exist_ok=True)
Path("audit/data_quality_report.json").write_text(
    json.dumps(report, indent=2, ensure_ascii=False),
    encoding="utf-8",
)
print("Report registrato in audit/data_quality_report.json")
PY
      - name: Pubblica audit
        uses: actions/upload-artifact@v4
        with:
          name: data-quality-audit
          path: audit/data_quality_report.json
          if-no-files-found: error
